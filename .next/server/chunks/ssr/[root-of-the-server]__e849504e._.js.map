{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/TECLAST/epicmo-forntend/app/register/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport Link from \"next/link\";\r\nimport { ArrowLeft, User, Mail, Lock, Eye, EyeOff } from \"lucide-react\";\r\n\r\nexport default function RegisterPage() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.name) newErrors.name = \"Full name is required\";\r\n    if (!formData.email) {\r\n      newErrors.email = \"Email is required\";\r\n    } else if (!/^\\S+@\\S+\\.\\S+$/.test(formData.email)) {\r\n      newErrors.email = \"Email is invalid\";\r\n    }\r\n    if (!formData.password) {\r\n      newErrors.password = \"Password is required\";\r\n    } else if (formData.password.length < 8) {\r\n      newErrors.password = \"Password must be at least 8 characters\";\r\n    }\r\n    if (formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      console.log(\"Form submitted:\", formData);\r\n      // Add your registration API call here\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center bg-gradient-to-br from-blue-50 via-white to-blue-100\">\r\n      <div className=\"bg-white/90 backdrop-blur-md p-10 rounded-2xl shadow-2xl w-full max-w-md border border-blue-100\">\r\n        <div className=\"flex flex-col items-center mb-8\">\r\n          <div className=\"w-50 h-50 flex items-center justify-center mb-2\">\r\n            <img\r\n              src=\"/epicmo.logo.png\"\r\n              alt=\"Epicmo Logo\"\r\n              className=\"w-full h-full object-contain rounded-full\"\r\n            />\r\n          </div>\r\n          <h1 className=\"text-2xl font-bold text-gray-800 mb-1\">\r\n            Create Account\r\n          </h1>\r\n          <p className=\"text-gray-500 text-sm\">Fill the form to register</p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n          {/* Full Name */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"name\"\r\n              className=\"block text-sm font-semibold text-gray-700 mb-1\"\r\n            >\r\n              Username\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <User className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                className={`block w-full pl-10 pr-3 py-2 border ${\r\n                  errors.name ? \"border-red-300\" : \"border-gray-200\"\r\n                } rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-300 transition text-gray-900 placeholder-gray-400`}\r\n                placeholder=\"Username\"\r\n              />\r\n            </div>\r\n            {errors.name && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.name}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Email */}\r\n          {/* Password */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"password\"\r\n              className=\"block text-sm font-semibold text-gray-700 mb-1\"\r\n            >\r\n              Password\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <Lock className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                id=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                className={`block w-full pl-10 pr-10 py-2 border ${\r\n                  errors.password ? \"border-red-300\" : \"border-gray-200\"\r\n                } rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-300 transition text-gray-900 placeholder-gray-400`}\r\n                placeholder=\"password\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                onClick={() => setShowPassword(!showPassword)}\r\n              >\r\n                {showPassword ? (\r\n                  <EyeOff className=\"h-5 w-5 text-gray-400\" />\r\n                ) : (\r\n                  <Eye className=\"h-5 w-5 text-gray-400\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n            {errors.password && (\r\n              <p className=\"mt-1 text-sm text-red-600\">{errors.password}</p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Confirm Password */}\r\n          <div>\r\n            <label\r\n              htmlFor=\"confirmPassword\"\r\n              className=\"block text-sm font-semibold text-gray-700 mb-1\"\r\n            >\r\n              Confirm Password\r\n            </label>\r\n            <div className=\"relative\">\r\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                <Lock className=\"h-5 w-5 text-gray-400\" />\r\n              </div>\r\n              <input\r\n                type={showConfirmPassword ? \"text\" : \"password\"}\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleChange}\r\n                className={`block w-full pl-10 pr-10 py-2 border ${\r\n                  errors.confirmPassword ? \"border-red-300\" : \"border-gray-200\"\r\n                } rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-300 transition text-gray-900 placeholder-gray-400`}\r\n                placeholder=\"Repeat your password\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                onClick={() => setShowConfirmPassword(!showConfirmPassword)}\r\n              >\r\n                {showConfirmPassword ? (\r\n                  <EyeOff className=\"h-5 w-5 text-gray-400\" />\r\n                ) : (\r\n                  <Eye className=\"h-5 w-5 text-gray-400\" />\r\n                )}\r\n              </button>\r\n            </div>\r\n            {errors.confirmPassword && (\r\n              <p className=\"mt-1 text-sm text-red-600\">\r\n                {errors.confirmPassword}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"w-full py-2 px-4 bg-gradient-to-r from-blue-600 to-blue-500 text-white font-semibold rounded-lg shadow-md hover:from-blue-700 hover:to-blue-600 transition\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n\r\n        <p className=\"mt-6 text-center text-sm text-gray-500\">\r\n          Already have an account?{\" \"}\r\n          <Link\r\n            href=\"/login\"\r\n            className=\"text-blue-600 font-semibold hover:underline\"\r\n          >\r\n            Sign in\r\n          </Link>\r\n        </p>\r\n     \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}